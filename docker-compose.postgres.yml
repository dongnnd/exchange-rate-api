version: '3'

services:
  node-app:
    container_name: exchange-rate-api
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    environment:
      # Environment
      - NODE_ENV=production
      - PORT=3000
      
      # PostgreSQL Configuration
      - POSTGRES_URL=postgresql://postgres:postgres123@postgres:5432/exchange_rate_db
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=exchange_rate_db
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=postgres123
      
      # JWT Configuration
      - JWT_SECRET=exchange_rate_api_jwt_secret_2024_very_long_and_secure_key_for_production
      - JWT_ACCESS_EXPIRATION_MINUTES=30
      - JWT_REFRESH_EXPIRATION_DAYS=30
      - JWT_RESET_PASSWORD_EXPIRATION_MINUTES=10
      - JWT_VERIFY_EMAIL_EXPIRATION_MINUTES=10
      
      # Email Configuration (optional)
      # - SMTP_HOST=smtp.gmail.com
      # - SMTP_PORT=587
      # - SMTP_USERNAME=your_email@gmail.com
      # - SMTP_PASSWORD=your_app_password
      # - EMAIL_FROM=noreply@exchange-rate.com
    depends_on:
      - postgres
    command: node --max-old-space-size=2048 src/index.js
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: exchange-rate-postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=exchange_rate_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
    restart: unless-stopped

volumes:
  postgres_data:
